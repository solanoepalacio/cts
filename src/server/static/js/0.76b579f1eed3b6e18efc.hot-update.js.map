{"version":3,"sources":["webpack:///./src/client/store/actions/auth.js?363a"],"names":["authAttempt","authSuccess","authFailure","authRequest","actions","type","userId","console","log","payload","message","authData","dispatch","slug","register","endpoint","undefined","method","header","credentials","Accept","body","JSON","stringify","then","response","json","catch","error"],"mappings":";;;;;;AAAA;;;;;QAYgBA,W,GAAAA,W;QAMAC,W,GAAAA,W;QAQAC,W,GAAAA,W;QAQAC,W,GAAAA,W;;AAhChB;;;;;;AAEA,IAAMC,UAAU;AACdJ,eAAa,cADC;AAEdC,eAAa,cAFC;AAGdC,eAAa;AAHC,CAAhB;;kBAMeE,O;AAER,SAASJ,WAAT,GAAwB;AAC7B,SAAO;AACLK,UAAMD,QAAQJ;AADT,GAAP;AAGD;;AAEM,SAASC,WAAT,OAAkC;AAAA,MAAVK,MAAU,QAAVA,MAAU;;AACvCC,UAAQC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACA,SAAO;AACLD,UAAMD,QAAQH,WADT;AAELQ,aAAS,EAAEH,cAAF;AAFJ,GAAP;AAID;;AAEM,SAASJ,WAAT,QAAmC;AAAA,MAAXQ,OAAW,SAAXA,OAAW;;AACxCH,UAAQC,GAAR,CAAY,cAAZ,EAA4BE,OAA5B;AACA,SAAO;AACLL,UAAMD,QAAQF,WADT;AAELO,aAAS,EAAEC,gBAAF;AAFJ,GAAP;AAID;;AAEM,SAASP,WAAT,CAAsBQ,QAAtB,EAAgC;AACrC,SAAO,UAAUC,QAAV,EAAoB;AACzBA,aAASZ,WAAT;AACA,QAAMa,OAAOF,SAASG,QAAT,GAAoB,UAApB,GAAiC,OAA9C;AACA,QAAMC,2CAAyCF,IAA/C;AACAN,YAAQC,GAAR,CAAY,UAAZ,EAAwBO,QAAxB;AACAJ,aAASG,QAAT,GAAoBE,SAApB;AACAT,YAAQC,GAAR,CAAY,UAAZ,EAAwBO,QAAxB;AACA,WAAO,0BAAMA,QAAN,EAAgB;AACrBE,cAAQ,MADa;AAErBC,cAAQ;AACNC,qBAAa,IADP;AAENC,gBAAQ,kBAFF;AAGN,wBAAgB;AAHV,OAFa;AAOrBC,YAAMC,KAAKC,SAAL,CAAeZ,QAAf;AAPe,KAAhB,EASNa,IATM,CASD;AAAA,aAAYC,SAASC,IAAT,EAAZ;AAAA,KATC,EAUNF,IAVM,CAUD,UAACC,QAAD,EAAc;AAClBlB,cAAQC,GAAR,CAAY,UAAZ,EAAwBiB,QAAxB;AACAb,eAASX,YAAYwB,QAAZ,CAAT;AACD,KAbM,EAcNE,KAdM,CAcA,UAACC,KAAD,EAAW;AAChBrB,cAAQC,GAAR,CAAY,2BAAZ,EAAyCoB,KAAzC;AACAhB,eAASV,YAAY,EAAEQ,SAASkB,MAAMlB,OAAjB,EAAZ,CAAT;AACD,KAjBM,CAAP;AAkBD,GAzBD;AA0BD,C","file":"0.76b579f1eed3b6e18efc.hot-update.js","sourcesContent":["'use strict'\n\nimport fetch from 'cross-fetch'\n\nconst actions = {\n  authAttempt: 'auth-attempt',\n  authSuccess: 'auth-success',\n  authFailure: 'auth-failure'\n}\n\nexport default actions\n\nexport function authAttempt () {\n  return {\n    type: actions.authAttempt,\n  }\n}\n\nexport function authSuccess ({ userId }) {\n  console.log('authSuccess', userId)\n  return {\n    type: actions.authSuccess,\n    payload: { userId }\n  }\n}\n\nexport function authFailure ({ message }) {\n  console.log('auth failure', message)\n  return {\n    type: actions.authFailure,\n    payload: { message }\n  }\n}\n\nexport function authRequest (authData) {\n  return function (dispatch) {\n    dispatch(authAttempt)\n    const slug = authData.register ? 'register' : 'login'\n    const endpoint = `http://localhost:5000/auth/${slug}`\n    console.log('endpoint', endpoint)\n    authData.register = undefined\n    console.log('endpoint', endpoint)\n    return fetch(endpoint, {\n      method: 'POST',\n      header: {\n        credentials: true,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    })\n    .then(response => response.json())\n    .then((response) => {\n      console.log('response', response)\n      dispatch(authSuccess(response))\n    })\n    .catch((error) => {\n      console.log('WARNING => REQUEST ERROR:', error)\n      dispatch(authFailure({ message: error.message }))\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/store/actions/auth.js"],"sourceRoot":""}