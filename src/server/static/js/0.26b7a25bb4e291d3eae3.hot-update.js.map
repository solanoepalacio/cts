{"version":3,"sources":["webpack:///./src/client/store/actions/utils/createAsyncAction.js?ad89"],"names":["createAsyncAction","name","endpoint","actions","storeActions","pseudoDispatch","asyncAction","requestBody","dispatch","options","mode","method","credentials","headers","Object","assign","body","JSON","stringify","console","log","then","response","status","error","promise","resolve","Promise","reject","text","s","contentType","get","toLowerCase","indexOf","json","payload","catch","denialText","message","actionCreators","cicleState","charAt","toUpperCase","concat","slice","type"],"mappings":"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","file":"0.26b7a25bb4e291d3eae3.hot-update.js","sourcesContent":["'use strict'\n\nimport fetch from 'cross-fetch'\n\nexport default function createAsyncAction (name, endpoint) {\n  const actions = {\n    [ name + 'Attempt' ]: `${name}-attempt`,\n    [ name + 'Success' ]: `${name}-success`,\n    [ name + 'Failure' ]: `${name}-failure`\n  }\n\n  const storeActions = {\n    [ name + 'Attempt' ]: pseudoDispatch(name, 'attempt', actions),\n    [ name + 'Success' ]: pseudoDispatch(name, 'success', actions),\n    [ name + 'Failure' ]: pseudoDispatch(name, 'failure', actions)\n  }\n\n  const asyncAction = function (requestBody) {\n    return function (dispatch) {\n      dispatch(storeActions[name + 'Attempt'])\n\n      const options = {\n        mode: 'cors',\n        method: 'GET',\n        credentials: 'include'\n      }\n\n      if (requestBody) {\n        options.method = 'POST'\n        \n        const headers = {}\n        headers['Content-Type'] = typeof requestBody === 'string'\n          ? 'text/plain'\n          : 'application/json'\n        \n        Object.assign(options, { headers })\n\n        options.body = JSON.stringify(requestBody)\n\n        console.log('options', options)\n      }\n\n      return  fetch(endpoint, options).then((response) => {\n        if (response.status >= 500) {\n          console.error('REQUEST - SERVER ERROR:', response.error || response)\n          return promise.resolve(false) // swallow errors\n        } else if (response.status >= 400) {\n          return new Promise((resolve, reject) => \n            response.text().then((s) => reject(s))\n          )\n        }\n\n        const contentType = response.headers.get('Content-Type')\n        console.log('contentType', contentType)\n        return contentType.toLowerCase().indexOf('application/json') !== -1 \n          ? response.json() : response.text()\n      })\n      .then((payload) => {\n        if (!payload) return // error swallowed\n        console.log('dispatching payload', payload)\n        dispatch(storeActions[ name + 'Success' ](payload))\n      })\n      .catch((denialText) => {\n        console.log('denialText', denialText)\n        dispatch(storeActions[ name + 'Failure' ]({ message: denialText }))\n      })\n    }\n  }\n\n  storeActions[ name + 'Request' ] = asyncAction\n  return { actions, actionCreators: storeActions }\n}\n\nfunction pseudoDispatch (name, cicleState, actions) {\n  cicleState = cicleState.charAt(0).toUpperCase().concat(cicleState.slice(1))\n  return function (payload) {\n    return {\n      type: actions[name + cicleState],\n      payload\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/store/actions/utils/createAsyncAction.js"],"sourceRoot":""}