{"version":3,"sources":["webpack:///./src/client/store/actions/auth.js?363a"],"names":["authAttempt","authSuccess","authFailure","logoutAttempt","logoutSuccess","logoutFailure","logoutRequest","authRequest","actions","type","userId","payload","message","console","log","dispatch","endpoint","method","mode","credentials","then","response","status","catch","error","authData","slug","register","undefined","headers","body","JSON","stringify","json","statusText","Promise","resolve"],"mappings":"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","file":"0.c0af56ebe3032221d71a.hot-update.js","sourcesContent":["'use strict'\n\nimport fetch from 'cross-fetch'\n\nconst actions = {\n  authAttempt: 'auth-attempt',\n  authSuccess: 'auth-success',\n  authFailure: 'auth-failure',\n  logoutAttempt: 'logout-attempt',\n  logoutSuccess: 'logout-success',\n  logoutFailure: 'logout-failure'\n}\n\nexport default actions\n\nexport function authAttempt () {\n  return {\n    type: actions.authAttempt,\n  }\n}\n\nexport function authSuccess ({ userId }) {\n  return {\n    type: actions.authSuccess,\n    payload: { userId }\n  }\n}\n\nexport function authFailure ({ message }) {\n  return {\n    type: actions.authFailure,\n    payload: { message }\n  }\n}\n\nexport function logoutAttempt () {\n  return {\n    type: actions.logoutAttempt\n  }\n}\n\nexport function logoutSuccess () {\n  console.log('logout success')\n  return {\n    type: actions.logoutSuccess\n  }\n}\n\nexport function logoutFailure () {\n  return {\n    type: actions.logoutFailure\n  }\n}\n\nexport function logoutRequest () {\n  return function (dispatch) {\n    const endpoint = 'http://localhost:5000/auth/logout'\n    dispatch(logoutAttempt())\n    return fetch(endpoint, {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'include' \n    })\n    .then(\n      (response) => {\n        console.log('response', response)\n        response.status === '200' && dispatch(logoutSuccess())\n      }\n    )\n    .catch(\n      (error) => dispatch(logoutFailure())\n    )\n  }\n}\n\nexport function authRequest (authData) {\n  return function (dispatch) {\n    dispatch(authAttempt)\n    const slug = authData.register ? 'register' : 'login'\n    const endpoint = `http://localhost:5000/auth/${slug}`\n    authData.register = undefined\n    return fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        credentials: 'include',\n        mode: 'cors'\n      },\n      body: JSON.stringify(authData)\n    })\n    .then(response => {\n      if (response.status === 200) {\n        return response.json()\n      } else if (response.status === 401) {\n        dispatch(authFailure({ message: response.statusText }))\n        return Promise.resolve(false)\n      }\n    })\n    .then((response) => {\n      response && dispatch(authSuccess(response))\n    })\n    .catch((error) => {\n      console.log('WARNING => REQUEST ERROR:', error)\n      dispatch(authFailure({ message: error.message }))\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/store/actions/auth.js"],"sourceRoot":""}